#set($css = "#renderCSS()")
#set($css = $css.replaceAll('    ', ''))
<!--#protect${css}#protect-->
#macro(renderCSS)
    /* CSS Generated by PAGE-BUILDER-CSS format script - https://github.com/doppl3r/cascade-cms-page-builder */
    ## Normalizer
    html { line-height: 1.15; -webkit-text-size-adjust: 100%; } body { margin: 0; } h1 { font-size: 2em; margin: 0.67em 0; } hr { box-sizing: content-box; height: 0; overflow: visible; } pre { font-family: monospace, monospace; font-size: 1em; } a { background-color: transparent; } abbr[title] { border-bottom: none; text-decoration: underline; text-decoration: underline dotted; } b, strong { font-weight: bolder; } code, kbd, samp { font-family: monospace, monospace; font-size: 1em; } small { font-size: 80%; } sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-align: baseline; } sub { bottom: -0.25em; } sup { top: -0.5em; } img { border-style: none; } button, input, optgroup, select, textarea { font-family: inherit; font-size: 100%; line-height: 1.15; margin: 0; } button, input { overflow: visible; } button, select { text-transform: none; } button, [type="button"], [type="reset"], [type="submit"] { -webkit-appearance: button; } button::-moz-focus-inner, [type="button"]::-moz-focus-inner, [type="reset"]::-moz-focus-inner, [type="submit"]::-moz-focus-inner { border-style: none; padding: 0; } button:-moz-focusring, [type="button"]:-moz-focusring, [type="reset"]:-moz-focusring, [type="submit"]:-moz-focusring { outline: 1px dotted ButtonText; } fieldset { padding: 0.35em 0.75em 0.625em; } legend { box-sizing: border-box; color: inherit; display: table; max-width: 100%; padding: 0; white-space: normal; } progress { vertical-align: baseline; } textarea { overflow: auto; } [type="checkbox"], [type="radio"] { box-sizing: border-box; padding: 0; } [type="number"]::-webkit-inner-spin-button, [type="number"]::-webkit-outer-spin-button { height: auto; } [type="search"] { -webkit-appearance: textfield; outline-offset: -2px; } [type="search"]::-webkit-search-decoration { -webkit-appearance: none; } ::-webkit-file-upload-button { -webkit-appearance: button; font: inherit; } details { display: block; } summary { display: list-item; } template { display: none; } [hidden] { display: none; }
    *, *:before, *:after { box-sizing: border-box; }
    ## CSS Grid System
    /* https://github.com/doppl3r/grix */
    .row{display:flex;flex-wrap:wrap}.row>[class*="col-"]{box-sizing:border-box;padding:0 12px;flex-grow:0}.row>.col{box-sizing:border-box;-ms-flex-preferred-size:0;-ms-flex-positive:1;flex:1 0 0;padding:0 12px;width:100%}.row>.col-1-m{width:8.3334%}.row>.col-2-m{width:16.6667%}.row>.col-3-m{width:25%}.row>.col-4-m{width:33.3334%}.row>.col-5-m{width:41.6667%}.row>.col-6-m{width:50%}.row>.col-7-m{width:58.3334%}.row>.col-8-m{width:66.6667%}.row>.col-9-m{width:75%}.row>.col-10-m{width:83.3334%}.row>.col-11-m{width:91.6667%}.row>.col-12-m{width:100%}.row>.col-1{width:8.3334%}.row>.col-2{width:16.6667%}.row>.col-3{width:25%}.row>.col-4{width:33.3334%}.row>.col-5{width:41.6667%}.row>.col-6{width:50%}.row>.col-7{width:58.3334%}.row>.col-8{width:66.6667%}.row>.col-9{width:75%}.row>.col-10{width:83.3334%}.row>.col-11{width:91.6667%}.row>.col-12{width:100%}@media (max-width: 768px){.row>[class*="col-"].col-1-m{width:8.3334%}.row>[class*="col-"].col-2-m{width:16.6667%}.row>[class*="col-"].col-3-m{width:25%}.row>[class*="col-"].col-4-m{width:33.3334%}.row>[class*="col-"].col-5-m{width:41.6667%}.row>[class*="col-"].col-6-m{width:50%}.row>[class*="col-"].col-7-m{width:58.3334%}.row>[class*="col-"].col-8-m{width:66.6667%}.row>[class*="col-"].col-9-m{width:75%}.row>[class*="col-"].col-10-m{width:83.3334%}.row>[class*="col-"].col-11-m{width:91.6667%}.row>[class*="col-"].col-12-m{width:100%}.row>.col-1{width:100%}.row>.col-2{width:100%}.row>.col-3{width:100%}.row>.col-4{width:100%}.row>.col-5{width:100%}.row>.col-6{width:100%}.row>.col-7{width:100%}.row>.col-8{width:100%}.row>.col-9{width:100%}.row>.col-10{width:100%}.row>.col-11{width:100%}.row>.col-12{width:100%}}
    ## Default PAGE-BUILDER CSS
    .row > div { width: 100%; }
    amp-script { opacity: 1; }
    section { background-size: cover; background-position: center center; }
    section, .row, [class*="col"], .content { position: relative; }
    .carousel-controls {  position: absolute; bottom: 12px; left: 0; right: 0; width: 100%; text-align: right; z-index: 1; box-sizing: border-box; padding: 0 12px; pointer-events: none; }
    .carousel-controls span[class] { display: inline-block; cursor: pointer; pointer-events: all; vertical-align: top; color: #fff; background-color: #000; font-size: 10px; line-height: 16px; padding: 0 8px; }
    .carousel-controls span.play:before { content: 'play'; }
    .carousel-controls span.pause:before { content: 'pause'; }
    .carousel-controls .indicators { display: inline-block; margin: 0; padding: 0; list-style: none; line-height: 16px; }
    .carousel-controls .indicators li { border-radius: 50%; cursor: pointer; display: inline-block; width: 16px; height: 16px; background-color: #000; pointer-events: all; box-sizing: border-box; }
    .carousel-controls .indicators li.active { background-color: #fff; border: 4px solid #000; }
    amp-carousel [class*="carousel-item"] { background-size: cover; background-position: center; }
    amp-carousel .amp-carousel-button { cursor: pointer; }
    [system-view:internal]
    [data-flag] { user-select: none; position: relative; }
    [data-flag]:before, [data-flag]:after { transition: all 0.1s ease-in-out; }
    [data-flag]:active:before, [data-flag]:active:after { opacity: 0; }
    [data-flag]:before { content: ''; background-color: rgba(0, 0, 0, 0.5); position: absolute; pointer-events: none; top: 0; right: 0; bottom: 0; left: 0; z-index: 1; }
    [data-flag]:after { font-family: "Arial"; font-size: 12px; line-height: 24px; height: 24px; pointer-events: none; width: 240px; margin: -12px 0 0 -120px; font-weight: bold; left: 50%; top: 50%; padding: 0 4px; position: absolute; text-align: center; text-transform: uppercase; z-index: 1; }
    [data-flag*="pending"]:after { content: 'pending: ' attr(data-start) ' \27F6   ' attr(data-end); background-color: rgba(0, 0, 0, 0.5); color: #fff; }
    [data-flag*="live"]:after { content: 'live: ' attr(data-start) ' \27F6   ' attr(data-end); background-color: rgba(0, 255, 0, 0.5); color: #fff; }
    [data-flag*="expired"]:after { content: 'expired: ' attr(data-start) ' \27F6   ' attr(data-end);background-color: rgba(0, 0, 0, 0.5); color: #fff; }
    [data-flag*="missing-dimensions"]:after { content: 'missing dimensions'; background-color: rgba(0, 0, 0, 0.5); color: #fff; }
    [data-flag*="host"]:after { content: attr(data-flag); background-color: rgba(0, 0, 0, 0.5); color: #fff; }
    [data-flag*="republish"]:after { content: attr(data-flag); background-color: rgba(255, 0, 0, 0.5); color: #fff; }
    [/system-view:internal]
    ## Load each section property class
    #set($page = $_XPathTool.selectNodes($contentRoot, '//system-data-structure/PAGE'))
    #set($sections = $_XPathTool.selectNodes($page, 'SECTION'))
    ## Loop through each section
    #foreach($section in $sections)
        #set($contentId = 0)
        #set($sectionId = $contentId)
        #set($sectionIndex = $velocityCount)
        #set($color = $section.getChild('BACKGROUND-COLOR').value)
        #set($image = $section.getChild('BACKGROUND-IMAGE').getChild("path").value)
        #set($padding = $section.getChild('PADDING').value)
        #set($color = "#if($color.length() > 0)background-color: $color;#{else}#end")
        #set($image = "#if($image.length() > 1)background-image: url('[system-asset]${image}[/system-asset]');#{else}#end")
        #set($padding = "#if($padding.length() > 0)padding: $padding;#{else}#end")
        #set($rows = $_XPathTool.selectNodes($section, 'ROW'))
        [data-name="section-${velocityCount}"] { ${color} ${image} ${padding} }
        ## loop through each row
        #foreach($row in $rows)
            #set($contentId = $contentId + 1)
            #set($rowId = $contentId)
            #set($rowIndex = $velocityCount)
            #set($columns = $_XPathTool.selectNodes($row, 'COLUMN'))
            ## loop through each column
            #foreach($column in $columns)
                #set($contentId = $contentId + 1)
                #set($columnId = $contentId)
                #set($columnIndex = $velocityCount)
                #set($contents = $_XPathTool.selectNodes($column, 'CONTENT'))
                ## loop through each content
                #foreach($content in $contents)
                    #set($contentId = $contentId + 1)
                    #set($contId = $contentId)
                    #set($contentIndex = $velocityCount)
                    #set($layout = $content.getChild('LAYOUT').value)
                    #set($items = $_XPathTool.selectNodes($content, 'ITEM'))
                    ## loop through each item
                    #foreach($item in $items)
                        #set($contentId = $contentId + 1)
                        #set($itemId = $contentId)
                        #set($src = '')
                        #set($internalMedia = '') #set($internalMedia = $item.getChild('INTERNAL-MEDIA').getChild('link').value)
                        #set($externalMedia = '') #set($externalMedia = $_EscapeTool.xml($item.getChild('EXTERNAL-MEDIA').value))
                        #if($internalMedia.length() > 0) #set($src = 'background-image: url("[system-asset]' + $internalMedia + '[/system-asset]");') #end
                        #if($externalMedia.length() > 0) #set($src = 'background-image: url("'+$externalMedia+'");') #end
                        #if($src.length() > 0 && $layout == 'fixed-height')
                            #carousel_id_$contId .carousel-item-${velocityCount} { $src }
                            #carousel_id_$contId .carousel-item-${velocityCount} amp-img { display: none; }
                        #end
                    #end
                #end
            #end
        #end
    #end
    ## Load page-level custom CSS (block & text)
    #set($cssBlocks = $_XPathTool.selectNodes($page, "CSS-BLOCK[path != '/']"))
    #set($snippet = $_XPathTool.selectSingleNode($page, 'CSS-SNIPPET').value)
    ## Loop through blocks
    #if ($cssBlocks.size() > 0)
        #foreach($cssBlock in $cssBlocks)
            #set($cssBlock = $cssBlock.getChild('content'))
            #if($cssBlock != '<path>/</path>')
                $_SerializerTool.serialize($cssBlock, true)
            #end
        #end
    #end
    ## Output page CSS snippet
    $!snippet
#end